<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.InventoryMapper">
	<select id="selectCountInventoryByFilm" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) 
		FROM inventory
		WHERE film_id = #{filmId}
	</select> 
	
	<select id="select_UnReturned_InventoryListByStore" parameterType="map" resultType="map">
		SELECT
			f.film_id filmId
			, f.title title
			, V6.inventoryId inventoryId
			, V6.storeId storeId
			, V6.inventoryCount inventoryCount
		FROM film f
		INNER join
			(SELECT 
				filmId
				, storeId
				, GROUP_concat(inventoryId) inventoryId
				, COUNT(inventoryId) inventoryCount
			FROM 
				(SELECT 
					i.inventory_id inventoryId
					, i.store_id storeId
					, i.film_id filmId
				FROM inventory i
				INNER JOIN
					(SELECT 
						rental_id
						,inventory_id
						, rental_date
					FROM 
						(SELECT 
								rental_id
								, inventory_id
								, rental_date
								, return_date
						FROM rental V1
						JOIN 
							(SELECT 
								inventory_id inventoryId 
								, MAX(rental_date) maxRentalData
							 FROM rental 
							 GROUP BY inventory_id) V2
						 ON V1.inventory_id = V2.inventoryId AND V1.rental_date = V2.maxRentalData) V3
					 WHERE return_date IS NULL) V4
				 ON i.inventory_id = V4.inventory_id) V5
			GROUP BY storeId, filmId) V6
		ON V6.filmId = f.film_id
		<where>
			<if test="searchWord == null">
			 	storeId = #{storeId}
			</if>
			<if test="searchWord != null">
			 	storeId = #{storeId} AND title LIKE '%#{searchWord}%'
			</if>
		</where>
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="select_Returned_InventoryListByStore" parameterType="map" resultType="map">
		SELECT
			f.film_id filmId
			, f.title title
			, V6.inventoryId inventoryId
			, V6.storeId storeId
			, V6.inventoryCount inventoryCount
		FROM film f
		INNER join
			(SELECT 
				filmId
				, storeId
				, GROUP_concat(inventoryId) inventoryId
				, COUNT(inventoryId) inventoryCount
			FROM 
				(SELECT 
					i.inventory_id inventoryId
					, i.store_id storeId
					, i.film_id filmId
				FROM inventory i
				INNER JOIN
					(SELECT 
						rental_id
						,inventory_id
						, rental_date
					FROM 
						(SELECT 
								rental_id
								, inventory_id
								, rental_date
								, return_date
						FROM rental V1
						JOIN 
							(SELECT 
								inventory_id inventoryId 
								, MAX(rental_date) maxRentalData
							 FROM rental 
							 GROUP BY inventory_id) V2
						 ON V1.inventory_id = V2.inventoryId AND V1.rental_date = V2.maxRentalData) V3
					 WHERE return_date IS NOT NULL) V4
				 ON i.inventory_id = V4.inventory_id) V5
			GROUP BY storeId, filmId) V6
		ON V6.filmId = f.film_id
		<where>
			 	storeId = #{storeId}
			<if test="searchWord != null and searchWord != ''">
			 	AND title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	
	<select id="select_UnReturned_InventoryTotalRowByStore" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM film f
				INNER join
					(SELECT 
						filmId
						, storeId
						, GROUP_concat(inventoryId) inventoryId
						, COUNT(inventoryId) inventoryCount
					FROM 
						(SELECT 
							i.inventory_id inventoryId
							, i.store_id storeId
							, i.film_id filmId
						FROM inventory i
						INNER JOIN
							(SELECT 
								rental_id
								,inventory_id
								, rental_date
							FROM 
								(SELECT 
										rental_id
										, inventory_id
										, rental_date
										, return_date
								FROM rental V1
								JOIN 
									(SELECT 
										inventory_id inventoryId 
										, MAX(rental_date) maxRentalData
									 FROM rental 
									 GROUP BY inventory_id) V2
								 ON V1.inventory_id = V2.inventoryId AND V1.rental_date = V2.maxRentalData) V3
							 WHERE return_date IS NULL) V4
						 ON i.inventory_id = V4.inventory_id) V5
					GROUP BY storeId, filmId) V6
				ON V6.filmId = f.film_id
		<where>
			<if test="searchWord == null">
			 	storeId = #{storeId}
			</if>
			<if test="searchWord != null">
			 	storeId = #{storeId} AND title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<select id="select_Returned_InventoryTotalRowByStore" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM film f
				INNER join
					(SELECT 
						filmId
						, storeId
						, GROUP_concat(inventoryId) inventoryId
						, COUNT(inventoryId) inventoryCount
					FROM 
						(SELECT 
							i.inventory_id inventoryId
							, i.store_id storeId
							, i.film_id filmId
						FROM inventory i
						INNER JOIN
							(SELECT 
								rental_id
								,inventory_id
								, rental_date
							FROM 
								(SELECT 
										rental_id
										, inventory_id
										, rental_date
										, return_date
								FROM rental V1
								JOIN 
									(SELECT 
										inventory_id inventoryId 
										, MAX(rental_date) maxRentalData
									 FROM rental 
									 GROUP BY inventory_id) V2
								 ON V1.inventory_id = V2.inventoryId AND V1.rental_date = V2.maxRentalData) V3
							 WHERE return_date IS NOT NULL) V4
						 ON i.inventory_id = V4.inventory_id) V5
					GROUP BY storeId, filmId) V6
				ON V6.filmId = f.film_id
		<where>
			<if test="searchWord == null">
			 	storeId = #{storeId}
			</if>
			<if test="searchWord != null">
			 	storeId = #{storeId} AND title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<select id="selectInventoryList" parameterType="Map" resultType="Map">
		SELECT 
			V1.inventory_id inventoryId
			, V1.film_id filmId
			, V1.title title
			, V1.last_update lastUpdate
			, V2.customer_id customerId
			, V1.storeId storeId
			, IFNULL(V2.rental_date, 'notReturn') rentalDate
		FROM
			(SELECT
				i.inventory_id 
				, i.film_id 
				, i.store_id storeId
				, i.last_update 
				, f.title
			FROM inventory i INNER JOIN film f
			ON i.film_id = f.film_id) V1
			left outer join
			(SELECT 
				inventory_id
				, customer_id
				, rental_date
			FROM rental
			WHERE return_date IS NULL) V2
			ON V1.inventory_id = V2.inventory_id
		<where>
			storeId = #{storeId} 
			<if test="searchWord != null">
				AND title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="rentaled == NULL">
				AND rentalDate LIKE 'notReturn'
			</if>
		</where>
		ORDER BY V1.inventory_id ASC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectInventoryLastPage" parameterType="map" resultType="Integer">
		SELECT 
			COUNT(*)
		from
			(SELECT
				i.inventory_id inventoryId
				, i.film_id filmId
				, i.store_id storeId
				, f.title title
			FROM inventory i INNER JOIN film f
			ON i.film_id = f.film_id) V1
			left outer join
			(SELECT 
				inventory_id inventoryId
				, customer_id customerId
				, rental_date rentalDate
			FROM rental
			WHERE return_date IS NULL) V2
			ON V1.inventoryId = V2.inventoryId
			<where>
				V1.storeId = #{storeId} 
				<if test="searchWord != null">
					AND title LIKE CONCAT('%',#{searchWord},'%')
				</if>
			</where>
	</select>
	
	<insert id="insertInventory" parameterType="com.example.sakila.vo.Inventory">
		INSERT INTO inventory(film_id, store_id)
		VALUES(#{filmId},#{storeId})
	</insert>
	
	<delete id="deleteInvetoryByKey" parameterType="Integer">
		DELETE FROM inventory
		WHERE inventory_id = #{inventoryId}
	</delete>
	
</mapper>


